Драйвер контроллера заряда и батареи 
====================================

Драйвер интегрируется  в подсистему power_supply и занимается опросом
контроллера батареи (bq40z50). 

ВАЖНО: драйвер только читает значения, не управляя зарядом и батерей.
       он не может выключить прибор, разрешить или запретить заряд и
       ещё как-то "вмешаться" в управление питанием.

Параметры, полученные в ходе опроса, кешируются и доступны для чтения в:

  * /sys/class/power_supply/BAT0 -- по батарее
  * /sys/class/power_supply/AC0  -- по заряднику (хотя реально всё равно
                                    информация получена из контроллера батареи)

Также при загрузке драйвера регистрируется input-девайс (etnbat-keys).
Название странное немного, но это так ;)
При изменении уровня ёмкости или отключении/подключении источника питания
в input-девайс попадает событие KEY_BATTERY (стандартное): 1, а потом 0.
К этому моменту новые значения уже доступны для чтения из sysfs.


Требование к .dtb
-----------------

В .dtb должны быть следующие строки, с указанием адресов девайсов на шине I2C.
Пример для платформы ETN с адресами 0xb и 0x9.


```
i2c1: i2c@ffc05000 {

  battery@0x0b {
    compatible = "ti,bq40z50";
    reg = <0x0b>;
  };

  charger@0x09 {
    compatible = "linear,ltc4100";
    reg = <0x09>;
  };
```


Какие значения можно прочитать из sysfs?
----------------------------------------

Если не сказано явно, емкость указана в uAh, ток в uA, 
напряжение в uV, температура в десятых долях градуса по Цельсию,
время в секундах.


  * capacity           -- текущая ёмкость батареи в процентах.

  * capacity_level     -- текущее состояние ёмкости:
                          Unknown, Critical, Low, Normal, High, Full
                          Границы задаются параметрами модуля.

  * charge_full        -- последнее сохранённое значение ёмкости, 
                          когда батарея была полностью заряжена.
                          В отличие от charge_full_design это реальное значение.

  * charge_full_design -- емкость батареи, прописанная "на заводе".

  * charge_now         -- текущее значение ёмкости.
  
  * status             -- текущий статус батареи:
                          Unknown, Discharging, Charging, Full

  * current_avg        -- усреднённое значение тока.

  * current_now        -- мнгновенное значение тока.

  * cycle_count        -- количество циклов заряда/разряда.

  * temp               -- температура батареи.

  * time_to_empty_avg  -- усреднённое время до полного разряда батареи.

  * time_to_empty_now  -- время до полного разряда батареи.

  * time_to_full_avg   -- усреднённое время до полного заряда батареи.

  * voltage_min_design -- минимальный уровень напряжения, прописанный
                          "на заводе".

  * voltage_now        -- текущий уровень напряжения.

  * serial_number      -- серийный номер батареи.


Параметры драйвера
------------------

  * polling_interval - период опроса параметров батареи в мс. Default = 2000;

  * low_voltage - нижний порог напряжения, мВ.
                  Достижение этого порога переводит параметр capacity_level в
                  значение "low".
                  Default value = 9700 мВ;

  * critical_voltage - критический порог напряжения, мВ. 
                       Достижение этого порога переводит параметр 
                       capacity_level в значение "critical".
                       Default = 9400 mV.

  * low_capacity - низкая ёмкость, %, default = 7.
                   поведение аналогично low_voltage.

  * critical_capacity - критическая ёмкость, %, default = 0;
                        поведение аналогично critical_voltage.

